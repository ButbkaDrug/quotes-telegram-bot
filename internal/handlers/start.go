package handlers

import (
    "fmt"
	tblib "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

var startHandler = &Handler{
	Use:         "start",
	Visible:     false,
	Description: "Welcome to the bot. Enter the command and we'll rock",
	Run: func(upd tblib.Update, args ...[]interface{}) (tblib.Chattable, error) {

		var text, cmds string
        text =`–ü—Ä–∏–≤–µ—Ç! üëã –Ø —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç –¥–ª—è —Ü–∏—Ç–∞—Ç. –Ø –º–æ–≥—É –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å —Ç–æ–±–æ–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ —Ü–∏—Ç–∞—Ç–∞–º–∏. –í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–º–∞–Ω–¥:
%s
–° –ª—é–±–æ–≤—å—é,
–¢–≤–æ–π –ë–æ—Ç ü§ñ
`

		keyboard := tblib.NewReplyKeyboard()

		for _, h := range Root.handlers {
			if !h.Visible {
				continue
			}
			button := tblib.NewKeyboardButton("/" + h.Use)
			row := tblib.NewKeyboardButtonRow(button)
			keyboard.Keyboard = append(keyboard.Keyboard, row)

			cmds += fmt.Sprintf("\n/%s - %s\n", h.Use, h.Description)
		}

        text = fmt.Sprintf(text, cmds)

		m := tblib.NewMessage(upd.Message.From.ID, text)

		m.ReplyMarkup = keyboard

		return m, nil
	},
}

func init() {
	Root.AddHandler(startHandler)
}
